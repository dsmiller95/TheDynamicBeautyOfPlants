#axiom Fn(0.2, 0, 100)r(5)P
#iterations 200

#symbols /\+-^&`@!*$

#symbols na
#matches n
#include diffusion (Node->n) (Amount->a)
#define diffusionStepsPerStep 5
#define diffusionRatio 0.2

#define DiffusionNode n
#define DiffusionAmount a

#define maxWater 100
#define DefaultDiffusionNode DiffusionNode(diffusionRatio, 0, maxWater)
#define DiffusionNodeMatcher DiffusionNode(ratio, water, maxWaterLocal)

#define minWaterToGrow 0.1
#define waterDiv 5

#symbols r
#define Root r

Root(x) -> DiffusionAmount(x) Root(x)

#symbols L
#define Leaf L

#symbols F
#define Stem F

#symbols R
#define ResourceVisualizer R

#symbols P
#define GrowthTip P
#symbols I
#define StemInit I

#define BranchDownScale 0.95


#define BranchSegmentStructure \(137) $(0.01) DefaultDiffusionNode ResourceVisualizer(0) StemInit StemInit !(BranchDownScale^2) @(BranchDownScale^2) [&(180-137) GrowthTip] [/(180) &(180-137) GrowthTip]
DiffusionNodeMatcher < GrowthTip : water >= minWaterToGrow -> BranchSegmentStructure

DiffusionNodeMatcher < ResourceVisualizer(x) -> ResourceVisualizer(water)


#symbols W
#define LeafyBranch W
StemInit -> Stem(0) LeafyBranch Stem(0)


P(0.5) | LeafyBranch -> [&& Leaf(0)][/(180)&& Leaf(0)]
P(0.5) | LeafyBranch -> [/(90)&& Leaf(0)][/(-90)&& Leaf(0)]

#define growthSpeed (1/15)

## randomly decide not to grow sometimes
P(0.5) | DiffusionNodeMatcher < Leaf(x) : water >= minWaterToGrow && (water/waterDiv + x) <  1 -> Leaf(x)
P(0.5) | DiffusionNodeMatcher < Leaf(x) : water >= minWaterToGrow && (water/waterDiv + x) <  1 -> DiffusionAmount(-water/waterDiv) Leaf(x + water/waterDiv)
         DiffusionNodeMatcher < Leaf(x) : water >= minWaterToGrow && (water/waterDiv + x) >= 1 -> DiffusionAmount(-water/waterDiv) Leaf


P(0.5) | DiffusionNodeMatcher < Stem(x) : water >= minWaterToGrow && (water/waterDiv + x) <  1 -> Stem(x)
P(0.5) | DiffusionNodeMatcher < Stem(x) : water >= minWaterToGrow && (water/waterDiv + x) <  1 -> DiffusionAmount(-water/waterDiv) Stem(x + water/waterDiv)
         DiffusionNodeMatcher < Stem(x) : water >= minWaterToGrow && (water/waterDiv + x) >= 1 -> DiffusionAmount(-water/waterDiv) Stem



#symbols K
#define BigFlower K
#symbols k
#define LittleFlower k
